name: Publish 🐍📦 to PyPI

on: push

jobs:
  build-prod:
    name: Build 📦
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run PyLint Check
      run: pylint --fail-under=10 totolo

    - name: Test with PyTest
      run: pytest --cov-report=xml --cov-fail-under=100 --cov=totolo tests/

    - name: Build Package
      run: |
        flit build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        overwrite: true


  publish-to-pypi:
    name: >-
      Publish 🐍📦 to PyPI
    needs:
    - build-prod
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/totolo
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Check Package Version & Git Tag
      run: |
        export PV=`python -c "import totolo; print('v' + totolo.__version__)"`
        export TV=`git describe --tag`
        echo "__version__ = '$PV'"
        echo "        tag = '$TV'"
        if [ "$PV" != "$TV" ]; then
          echo "Python package __version__ doesn't match git tag. Exiting."
          exit 1
        fi

    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


  github-release:
    name: >-
      Sign the 🐍📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
